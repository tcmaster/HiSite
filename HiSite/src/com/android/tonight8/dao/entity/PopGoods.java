package com.android.tonight8.dao.entity;

import com.android.tonight8.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import com.android.tonight8.dao.EventDao;
import com.android.tonight8.dao.PopGoodsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table POP_GOODS.
 */
public class PopGoods {

    private Long id;
    private Long rid;
    private Integer popGoodsPrice;
    private String popGoodsName;
    private String popGoodsPic;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient PopGoodsDao myDao;

    private Event event;
    private Long event__resolvedKey;


    public PopGoods() {
    }

    public PopGoods(Long id) {
        this.id = id;
    }

    public PopGoods(Long id, Long rid, Integer popGoodsPrice, String popGoodsName, String popGoodsPic) {
        this.id = id;
        this.rid = rid;
        this.popGoodsPrice = popGoodsPrice;
        this.popGoodsName = popGoodsName;
        this.popGoodsPic = popGoodsPic;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getPopGoodsDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Long getRid() {
        return rid;
    }

    public void setRid(Long rid) {
        this.rid = rid;
    }

    public Integer getPopGoodsPrice() {
        return popGoodsPrice;
    }

    public void setPopGoodsPrice(Integer popGoodsPrice) {
        this.popGoodsPrice = popGoodsPrice;
    }

    public String getPopGoodsName() {
        return popGoodsName;
    }

    public void setPopGoodsName(String popGoodsName) {
        this.popGoodsName = popGoodsName;
    }

    public String getPopGoodsPic() {
        return popGoodsPic;
    }

    public void setPopGoodsPic(String popGoodsPic) {
        this.popGoodsPic = popGoodsPic;
    }

    /** To-one relationship, resolved on first access. */
    public Event getEvent() {
        Long __key = this.rid;
        if (event__resolvedKey == null || !event__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            EventDao targetDao = daoSession.getEventDao();
            Event eventNew = targetDao.load(__key);
            synchronized (this) {
                event = eventNew;
            	event__resolvedKey = __key;
            }
        }
        return event;
    }

    public void setEvent(Event event) {
        synchronized (this) {
            this.event = event;
            rid = event == null ? null : event.getId();
            event__resolvedKey = rid;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
